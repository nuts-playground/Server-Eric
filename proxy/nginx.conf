# 이벤트 블록 추가
events {
    worker_connections  1024; # 연결 수 조정
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # 서버 블록 설정
    server {
        listen 80; # 포트 지정

        server_name example.com; # 서버 이름 설정

        location / {
            proxy_pass http://localhost:3000; # 요청을 프록시로 전달할 주소 지정
            proxy_http_version 1.1; # 프록시의 HTTP 버전 설정
            proxy_set_header Upgrade $http_upgrade; # 업그레이드 헤더 설정
            proxy_set_header Connection 'upgrade'; # 연결 설정
            proxy_set_header Host $host; # 호스트 헤더 설정
            proxy_cache_bypass $http_upgrade; # 캐시 우회 설정
        }

        # 에러 페이지 설정
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html; # 에러 페이지 위치
        }
    }

    server {
        listen 443 ssl;
        server_name seokhoserver.site www.seokhoserver.site;

        ssl_certificate /etc/letsencrypt/live/seokhoserver.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/seokhoserver.site/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384';

        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}